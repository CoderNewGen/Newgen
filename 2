// components/TrackedClick.tsx
import { useTracking } from '../hooks/useTracking';

type TrackedClickProps = {
  eventId: string;
  eventType: 'click' | 'navigation';
  elementType: 'button' | 'link' | 'external-link';
  metadata?: Record<string, unknown>;
  onClick?: () => void;
  children: React.ReactNode;
} & React.ComponentPropsWithoutRef<'button'> &
  React.ComponentPropsWithoutRef<'a'>;

export function TrackedClick({ eventId, eventType, elementType, metadata, onClick, children, ...props }: TrackedClickProps) {
  const { trackEvent } = useTracking();

  const handleClick = async () => {
    await trackEvent({ eventId, eventType, elementType, metadata });
    onClick?.();
  };

  const Element = elementType === 'link' ? 'a' : 'button';

  return (
    <Element onClick={handleClick} {...props}>
      {children}
    </Element>
  );
}

// Usage:
<TrackedClick
  eventId="demo_click"
  eventType="click"
  elementType="button"
  metadata={{ page: 'home' }}
  onClick={handleDemo}
>
  Try Demo
</TrackedClick>
