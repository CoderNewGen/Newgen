// hooks/useTracking.ts
import { useCallback } from 'react';

type TrackableEvent = {
  eventId: string;
  eventType: 'click' | 'navigation';
  elementType: 'button' | 'link' | 'external-link';
  metadata?: Record<string, unknown>;
};

export function useTracking() {
  const trackEvent = useCallback(async (event: TrackableEvent) => {
    try {
      await fetch('/api/analytics', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          ...event,
          timestamp: new Date().toISOString(),
        }),
      });
    } catch (error) {
      console.error('Tracking failed:', error);
    }
  }, []);

  const createTrackedHandler = useCallback(
    (event: TrackableEvent, originalHandler?: () => void) => {
      return async () => {
        await trackEvent(event);
        originalHandler?.();
      };
    },
    [trackEvent]
  );

  return { trackEvent, createTrackedHandler };
}


button
function SubmitButton() {
  const { createTrackedHandler } = useTracking();

  const handleSubmit = () => {
    console.log('Form submitted');
  };

  const trackedSubmit = createTrackedHandler(
    {
      eventId: 'form_submit',
      eventType: 'click',
      elementType: 'button',
      metadata: { formName: 'contact' },
    },
    handleSubmit
  );

  return <button onClick={trackedSubmit}>Submit</button>;
}
internal links
function NavLink() {
  const { createTrackedHandler } = useTracking();

  const trackedClick = createTrackedHandler({
    eventId: 'dashboard_nav',
    eventType: 'navigation',
    elementType: 'link',
    metadata: { source: 'sidebar' },
  });

  return <Link to="/dashboard" onClick={trackedClick}>Dashboard</Link>;
}

external links
function ExternalLink() {
  const { trackEvent } = useTracking();

  const handleClick = async () => {
    await trackEvent({
      eventId: 'external_docs',
      eventType: 'navigation',
      elementType: 'external-link',
      metadata: { type: 'documentation' },
    });
    window.open('https://example.com', '_blank');
  };

  return <a onClick={handleClick}>Documentation</a>;
}
