import React from 'react';
import { render, screen, fireEvent, act } from '@testing-library/react';
import TimeoutPopup from './TimeoutPopup';
import '@testing-library/jest-dom/extend-expect';

// Mock for useTranslation
jest.mock('react-i18next', () => ({
  useTranslation: () => ({
    t: (key) => key,
  }),
}));

describe('TimeoutPopup Component', () => {
  const mockStaySignedinHandler = jest.fn();
  const mockSignoutHandler = jest.fn();

  const defaultProps = {
    show: true,
    millisecondsTillSignout: 120000, // 2 minutes
    staySignedinHandler: mockStaySignedinHandler,
    signoutHandler: mockSignoutHandler,
    staySignedInButtonText: 'Stay Signed In',
    signoutButtonText: 'Sign Out',
  };

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('renders correctly when shown', () => {
    render(<TimeoutPopup {...defaultProps} />);
    expect(screen.getByText('YOURE_ABOUT_TO_BE_SIGNED_OUT')).toBeInTheDocument();
    expect(screen.getByText('FOR_YOUR_SECURITY_WE_WILL_SIGN_YOU_OUT')).toBeInTheDocument();
    expect(screen.getByText('Stay Signed In')).toBeInTheDocument();
    expect(screen.getByText('Sign Out')).toBeInTheDocument();
  });

  it('renders children when provided', () => {
    render(<TimeoutPopup {...defaultProps}>Test Children</TimeoutPopup>);
    expect(screen.getByText('Test Children')).toBeInTheDocument();
  });

  it('calls staySignedinHandler when "Stay Signed In" button is clicked', () => {
    render(<TimeoutPopup {...defaultProps} />);
    fireEvent.click(screen.getByText('Stay Signed In'));
    expect(mockStaySignedinHandler).toHaveBeenCalled();
  });

  it('calls signoutHandler when "Sign Out" button is clicked', () => {
    render(<TimeoutPopup {...defaultProps} />);
    fireEvent.click(screen.getByText('Sign Out'));
    expect(mockSignoutHandler).toHaveBeenCalled();
  });

  it('starts countdown after a delay and updates screen reader text', () => {
    jest.useFakeTimers();

    render(<TimeoutPopup {...defaultProps} />);

    // Countdown should start after millisecondsTillSignout - COUNTDOWN_START_OFFSET
    act(() => {
      jest.advanceTimersByTime(defaultProps.millisecondsTillSignout - 60000);
