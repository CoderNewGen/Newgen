import React, { useEffect, useState } from 'react';
import AskHMRC from '../../../components/AppComponents/AskHMRC';
import Button from '../../../components/BaseComponents/Button/Button';
import { useTranslation } from 'react-i18next';
import useHMRCExternalLinks from '../../../components/helpers/hooks/HMRCExternalLinks';
import PenaltyDatails from './PenaltyDatails';
import setPageTitle from '../../../components/helpers/setPageTitleHelpers';
import { getServiceShutteredStatus } from '../../../components/helpers/utils';

interface AppealsAndPenaltiesLandingProps {
  showPortalBanner: boolean;
  isLogout: boolean;
  pConn: any;
  penaltyDataEndpoint: string;
  creatCaseEndpoint: string;
  handleCaseStart: () => void;
  caseListApiParams: Record<string, any>;
  setShutterServicePage: (status: boolean) => void;
}

export default function AppealsAndPenaltiesLanding(props: AppealsAndPenaltiesLandingProps) {
  const {
    showPortalBanner,
    isLogout,
    pConn,
    penaltyDataEndpoint,
    creatCaseEndpoint,
    handleCaseStart,
    caseListApiParams,
    setShutterServicePage,
  } = props;

  const [dashboardData, setDashboardData] = useState([]);
  const { t } = useTranslation();
  const { hmrcURL } = useHMRCExternalLinks();

  useEffect(() => {
    setPageTitle();
    checkShutterService();
  }, [showPortalBanner]);

  const createCase = () => {
    PCore.getMashupApi().createCase(creatCaseEndpoint, PCore.getConstants().APP.APP);
    handleCaseStart();
  };

  const fetchInProgressCaseDetailData = async () => {
    const context = pConn.getContextName();
    try {
      const resp = await PCore.getDataPageUtils().getDataAsync(
        penaltyDataEndpoint,
        context,
        { ...caseListApiParams }
      );
      setDashboardData(resp.data);
    } catch (error) {
      console.error('Error fetching in-progress case detail:', error);
    }
    sessionStorage.setItem('assignmentFinishedFlag', 'false');
  };

  const checkShutterService = async () => {
    try {
      const status = await getServiceShutteredStatus();
      if (!status) fetchInProgressCaseDetailData();
      setShutterServicePage(status);
    } catch (error) {
      setShutterServicePage(false);
      console.error('Error setting shutter status:', error);
    }
  };

  return (
    <main
      className={`govuk-main-wrapper ${isLogout ? 'visibility-hidden' : ''}`}
      id="main-content"
      role="main"
    >
      <div className="govuk-grid-row">
        <div className="govuk-grid-column-full govuk-prototype-kit-common-templates-mainstream-guide-body govuk-!-padding-right-0 govuk-!-padding-left-0">
          <div className="govuk-grid-column-two-thirds">
            <HeaderSection t={t} />
            {dashboardData.length === 0 ? (
              <NoPenaltiesMessage t={t} />
            ) : (
              <>
                <DashboardContent
                  t={t}
                  dashboardData={dashboardData}
                  createCase={createCase}
                  hmrcURL={hmrcURL}
                />
              </>
            )}
          </div>
        </div>
      </div>
    </main>
  );
}




const HeaderSection: React.FC<{ t: any }> = ({ t }) => (
  <h1 className="govuk-heading-l">{t('YOUR_SELF_ASSESMENT_PENALTIES')}</h1>
);
const NoPenaltiesMessage: React.FC<{ t: any }> = ({ t }) => (
  <p>{t('YOU_DO_NOT_HAVE_SA_PENALTIES')}</p>
);


interface DashboardContentProps {
  t: any;
  dashboardData: any[];
  createCase: () => void;
  hmrcURL: string;
}

const DashboardContent: React.FC<DashboardContentProps> = ({
  t,
  dashboardData,
  createCase,
  hmrcURL,
}) => (
  <>
    <div className="govuk-body">
      <p>{t('YOU_CAN_MAKE_AN_APPEAL')}</p>
      <p>{t('YOU_WILL_BE_ASKED_ABOUT_YOUR_REASON')}</p>
      <p>
        <a
          className="govuk-link"
          rel="noreferrer noopener"
          href="https://www.gov.uk/guidance/check-when-you-can-expect-a-reply-from-hmrc"
          target="_blank"
        >
          {t('CHECK_REPLY_FROM_HMRC')} {t('OPENS_IN_NEW_TAB')}
        </a>
        .
      </p>
    </div>
    <PenaltyDatails data={dashboardData} />
    <AdditionalInfo t={t} createCase={createCase} hmrcURL={hmrcURL} />
  </>
)


interface AdditionalInfoProps {
  t: any;
  createCase: () => void;
  hmrcURL: string;
}

const AdditionalInfo: React.FC<AdditionalInfoProps> = ({ t, createCase, hmrcURL }) => (
  <>
    <div className="govuk-body govuk-!-static-margin-bottom-6">
      <h2 className="govuk-heading-m">{t('MAKE_AN_APPEAL')}</h2>
      <p>{t('IF_YOU_DONT_THINK')}</p>
      <p>{t('YOU_WILL_BE_ASKED_ABOUT_REASON')}</p>
      <p>{t('YOU_CAN_ALSO_TELL_US')}</p>
      <h2 className="govuk-heading-m">{t('IF_YOU_HAVE_MORE_THAN_ONE')}</h2>
      <p>{t('THERE_ARE_2_TYPES')}</p>
      <ul className="govuk-list govuk-list--bullet">
        <li>{t('LFP')}</li>
        <li>{t('LPP')}</li>
      </ul>
      <p>{t('APPEAL_MULTIPLE_PENALTIES')}</p>
      <p>{t('IF_YOU_HAVE_MORE_THAN_ONE_ACROSS_MULTIPLE_TAX_YEARS')}</p>
    </div>
    <Button
      id="continueToPortal"
      onClick={createCase}
      data-prevent-double-click="true"
      attributes={{ className: 'govuk-!-static-margin-bottom-1' }}
    >
      {t('START_NOW')}
    </Button>
    <AskHMRC />
    <p className="govuk-body">
      <a
        className="govuk-link"
        rel="noreferrer noopener"
        target="_blank"
        href={`${hmrcURL}contact/report-technical-problem?service=427&referrerUrl=${window.location}`}
      >
        {t('PAGE_NOT_WORKING_PROPERLY')} {t('OPENS_IN_NEW_TAB')}
      </a>
    </p>
  </>
);




