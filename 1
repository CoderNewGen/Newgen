import React from 'react';
import { render, screen } from '@testing-library/react';
import { useTranslation } from 'react-i18next';
import ShutterServicePage from './ShutterServicePage';
import setPageTitle from '../../helpers/setPageTitleHelpers';

// Mock dependencies
jest.mock('react-i18next', () => ({
  useTranslation: jest.fn(),
}));

jest.mock('../../helpers/setPageTitleHelpers', () => jest.fn());

describe('ShutterServicePage', () => {
  beforeEach(() => {
    jest.clearAllMocks();
    useTranslation.mockReturnValue({
      t: (key) => key, // Simple mock for translations
    });
  });

  test('renders the component successfully', () => {
    render(<ShutterServicePage />);
    expect(screen.getByRole('heading', { level: 1 })).toHaveTextContent('SHUTTER_SERVICE_UNAVAILABLE');
    expect(screen.getByText('SHUTTER_USE_SERVICE_LATER_MESSAGE')).toBeInTheDocument();
  });

  test('calls setPageTitle on mount', () => {
    render(<ShutterServicePage />);
    expect(setPageTitle).toHaveBeenCalledTimes(1);
  });

  test('renders with the correct language based on sessionStorage', () => {
    sessionStorage.setItem('rsdk_locale', 'fr-FR');
    render(<ShutterServicePage />);
    expect(screen.getByRole('heading', { level: 1 })).toHaveTextContent('SHUTTER_SERVICE_UNAVAILABLE');
  });

  test('defaults to English when no locale is in sessionStorage', () => {
    sessionStorage.removeItem('rsdk_locale');
    render(<ShutterServicePage />);
    expect(screen.getByRole('heading', { level: 1 })).toHaveTextContent('SHUTTER_SERVICE_UNAVAILABLE');
  });
});
