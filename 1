import React, { FC, useRef, useEffect, MouseEvent, useCallback, useMemo, ElementRef } from 'react';
import { ErrorSummaryProps } from './ErrorSummary.types';

const ErrorSummary: FC<ErrorSummaryProps> = ({
  heading = 'There is a problem',
  errorDetails = [],
  autoMoveFocus = true,
}) => {
  const errorSummaryRef = useRef<ElementRef<'div'>>(null);

  useEffect(() => {
    if (errorDetails.length > 0 && errorSummaryRef.current && autoMoveFocus) {
      errorSummaryRef.current.focus();
    }
  }, [errorDetails, autoMoveFocus]);

  const handleClick = useCallback((e: MouseEvent<HTMLAnchorElement>) => {
    e.preventDefault();
    const targetId = e.currentTarget.href.split('#').pop();
    const target = targetId ? document.getElementById(targetId) : null;

    if (target) {
      target.focus();
    }
  }, []);

  const errorList = useMemo(
    () =>
      errorDetails.map(({ targetFieldId, message }) => (
        <li key={targetFieldId}>
          <a href={`#${targetFieldId}`} onClick={handleClick}>
            {message}
          </a>
        </li>
      )),
    [errorDetails, handleClick]
  );

  return (
    <div
      ref={errorSummaryRef}
      className="govuk-error-summary"
      tabIndex={-1}
      data-module="govuk-error-summary"
    >
      <div role="alert">
        <h2 className="govuk-error-summary__title">{heading}</h2>
        <div className="govuk-error-summary__body
